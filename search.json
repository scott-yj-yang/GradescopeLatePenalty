[
  {
    "objectID": "tutorial/gradescope late penalty tutorial.html",
    "href": "tutorial/gradescope late penalty tutorial.html",
    "title": "gradescope late penalty tutorial",
    "section": "",
    "text": "To use the canvas API functionalities, you will have to provide API credentials in order to communicate to canvas. For more details, visit how to set credentials\nBe sure to provide with the correct course_id and assignment_id of your target assignment to the gradescope_grade object. You can also double check in the output message of whether you have provided the correct credentials, course, and assignment to the object.\n\nfrom LatePenalty.gradescope import gradescope_grade\n\n\ngrade = gradescope_grade(\"../../../credentials.json\",\n                         course_id=45059,\n                         assignment_id=641795,\n                         gradescope_fp=\"../data/gradescope_example.csv\",\n                         verbosity=1,\n                        )\n\nAuthorization Successful!\nCourse Set:  COGS 118A - Supvr/Mach Learning Algorithms - Fleischer [SP23] \nGetting List of Users... This might take a while...\nUsers Fetch Complete! The course has 169 users.\nAssignment A1 Link!\n\n\nThe gradescope generated csv file will look something like the following. For each assignment, the score and lateness are recorded. We can use those information to calculate the late day balance and to apply appropriate late penalties to student.",
    "crumbs": [
      "tutorial",
      "gradescope late penalty tutorial"
    ]
  },
  {
    "objectID": "tutorial/gradescope late penalty tutorial.html#authentication-initialization",
    "href": "tutorial/gradescope late penalty tutorial.html#authentication-initialization",
    "title": "gradescope late penalty tutorial",
    "section": "",
    "text": "To use the canvas API functionalities, you will have to provide API credentials in order to communicate to canvas. For more details, visit how to set credentials\nBe sure to provide with the correct course_id and assignment_id of your target assignment to the gradescope_grade object. You can also double check in the output message of whether you have provided the correct credentials, course, and assignment to the object.\n\nfrom LatePenalty.gradescope import gradescope_grade\n\n\ngrade = gradescope_grade(\"../../../credentials.json\",\n                         course_id=45059,\n                         assignment_id=641795,\n                         gradescope_fp=\"../data/gradescope_example.csv\",\n                         verbosity=1,\n                        )\n\nAuthorization Successful!\nCourse Set:  COGS 118A - Supvr/Mach Learning Algorithms - Fleischer [SP23] \nGetting List of Users... This might take a while...\nUsers Fetch Complete! The course has 169 users.\nAssignment A1 Link!\n\n\nThe gradescope generated csv file will look something like the following. For each assignment, the score and lateness are recorded. We can use those information to calculate the late day balance and to apply appropriate late penalties to student.",
    "crumbs": [
      "tutorial",
      "gradescope late penalty tutorial"
    ]
  },
  {
    "objectID": "tutorial/gradescope late penalty tutorial.html#understand-the-gradescope-export-csv-file",
    "href": "tutorial/gradescope late penalty tutorial.html#understand-the-gradescope-export-csv-file",
    "title": "gradescope late penalty tutorial",
    "section": "Understand the Gradescope Export csv File",
    "text": "Understand the Gradescope Export csv File\n\n# take a look at the csv file\ngrade.gradescope\n\n\n\n\n\n\n\n\nFirst Name\nLast Name\nSID\nAssignment 1\nAssignment 1 - Manual Grading\nAssignment 1 - Lateness (H:M:S)\n\n\nEmail\n\n\n\n\n\n\n\n\n\n\nkkdwdx\nFVPqOMpv\njhjx\nzPBPCJwDL\n0.650\n1.8\n24:01:41\n\n\nJhThhnUaOPDUIEb\nBVTLaj\nJL\nbJhgVCFRz\n0.900\n2.1\n00:00:00\n\n\ndbAbqg\nuaNTaJHacrK\nPNrEkH\nDqEMLsESM\n0.475\n1.9\n00:00:00\n\n\n\n\n\n\n\nFrom the table, we will be only interested in the target assignment Assignment 1, and the Lateness of each studentâ€™s submission, found in the column Assignment 1 - Lateness (H:M:S).\nSometime, an assignment might have multiple components. For example, in COGS 118A, we have a mixture of autograded jupyter notebook and a manual grading component for each assignment. This package will post the summation of score between the components, and use the target_assignment to calculate late penalty.",
    "crumbs": [
      "tutorial",
      "gradescope late penalty tutorial"
    ]
  },
  {
    "objectID": "tutorial/gradescope late penalty tutorial.html#post-grade",
    "href": "tutorial/gradescope late penalty tutorial.html#post-grade",
    "title": "gradescope late penalty tutorial",
    "section": "Post Grade",
    "text": "Post Grade\nBefore each post grade, it is nice to do a sanity check before posting to canvas. You can achieve that by specifying post=False in the gradescope_grade.post_to_canvas\n\ngrade.post_to_canvas(\n    target_assignment=\"Assignment 1\",\n    passed_assignments=[],\n    components=[\"Assignment 1\", \"Assignment 1 - Manual Grading\"],\n    post=False\n)\n\nForce Posting Disabled. If you need to completely overwrite student scores, please set force=True\nPost Disabled\nThe message is: \nAssignment 1: \nLate Submission: 25 Hours Late\nSlip Credit Used. No late penalty applied\nRemaining Slip Credit: 95 Hours\n\nPost Disabled\nThe message is: \nAssignment 1: \nSubmitted intime\nRemaining Slip Credit: 120 Hours\n\nPost Disabled\nThe message is: \nAssignment 1: \nSubmitted intime\nRemaining Slip Credit: 120 Hours",
    "crumbs": [
      "tutorial",
      "gradescope late penalty tutorial"
    ]
  },
  {
    "objectID": "api/gradescope_process_grade.html",
    "href": "api/gradescope_process_grade.html",
    "title": "gradescope",
    "section": "",
    "text": "source\n\ngradescope_grade\n\n gradescope_grade (credentials_fp='', API_URL='https://canvas.ucsd.edu',\n                   course_id='', assignment_id=-1, gradescope_fp='',\n                   verbosity=1)\n\nInitialize Canvas Group within a Group Set and its appropriate memberships\n\n\n\n\nType\nDefault\nDetails\n\n\n\n\ncredentials_fp\nstr\n\ncredential file path. Template of the credentials.json\n\n\nAPI_URL\nstr\nhttps://canvas.ucsd.edu\nthe domain name of canvas\n\n\ncourse_id\nstr\n\nCourse ID can be found in the course url\n\n\nassignment_id\nint\n-1\nassignment id, can be found in the canvas assignment url\n\n\ngradescope_fp\nstr\n\ngradescope csv file path\n\n\nverbosity\nint\n1\nControls the verbosity: 0 = Silent, 1 = print all messages\n\n\n\n\nsource\n\n\ngradescope_grade.auth_canvas\n\n gradescope_grade.auth_canvas (credentials_fp:str)\n\nAuthorize the canvas module with API_KEY\n\n\n\n\nType\nDetails\n\n\n\n\ncredentials_fp\nstr\nthe Authenticator key generated from canvas\n\n\n\n\nsource\n\n\ngradescope_grade.set_course\n\n gradescope_grade.set_course (course_id:int)\n\nSet the target course by the course ID\n\n\n\n\nType\nDetails\n\n\n\n\ncourse_id\nint\nthe course id of the target course\n\n\n\n\nsource\n\n\ngradescope_grade.link_assignment\n\n gradescope_grade.link_assignment (assignment_id:int)\n\nLink the target assignment on canvas\n\n\n\n\n\n\n\n\n\nType\nDetails\n\n\n\n\nassignment_id\nint\nassignment id, found at the url of assignment tab\n\n\nReturns\nAssignment\ntarget assignment\n\n\n\n\nsource\n\n\ngradescope_grade.load_gradescope_csv\n\n gradescope_grade.load_gradescope_csv (csv_pf:str)\n\nLoad gradescope exported csv file\n\n\n\n\nType\nDetails\n\n\n\n\ncsv_pf\nstr\ncsv file path\n\n\n\n\nsource\n\n\ngradescope_grade.calculate_late_hour\n\n gradescope_grade.calculate_late_hour (target_assignment:str)\n\nCalculate the late hours of each submission of the target assignment\n\n\n\n\n\n\n\n\n\nType\nDetails\n\n\n\n\ntarget_assignment\nstr\ntarget assignment name. Must in the column of gradescope csv\n\n\nReturns\nSeries\nlate hours of the target assignment\n\n\n\n\nsource\n\n\ngradescope_grade.calculate_credit_balance\n\n gradescope_grade.calculate_credit_balance (passed_assignments:List[str],\n                                            total_credit=120)\n\nCalculate the balance of late hours from the gradescope file\n\n\n\n\n\n\n\n\n\n\nType\nDefault\nDetails\n\n\n\n\npassed_assignments\nList\n\nlist of passed assignment. Must in the column of gradescope csv\n\n\ntotal_credit\nint\n120\ntotal number of allowed late hours\n\n\nReturns\ndict\n\n{email: credit balance} late credit balance of each student\n\n\n\n\nsource\n\n\ngradescope_grade.calculate_total_score\n\n gradescope_grade.calculate_total_score (components:List[str])\n\nCalculate the total score of an assignment\n\n\n\n\n\n\n\n\n\nType\nDetails\n\n\n\n\ncomponents\nList\ncomponents of a single assignment. Must in the column of gradescope csv\n\n\nReturns\nSeries\n\n\n\n\n\nsource\n\n\ngradescope_grade._post_grade\n\n gradescope_grade._post_grade (student_id:int, grade:float,\n                               text_comment='', force=False)\n\nPost grade and comment to canvas to the target assignment\n\n\n\n\n\n\n\n\n\n\nType\nDefault\nDetails\n\n\n\n\nstudent_id\nint\n\ncanvas student id of a student. found in self.email_to_canvas_id\n\n\ngrade\nfloat\n\ngrade of that assignment\n\n\ntext_comment\nstr\n\nText comment of the submission. Can feed\n\n\nforce\nbool\nFalse\nWhether force to post grade for all students. If False (default), it will skip post for the same score.\n\n\nReturns\nSubmission\n\ncreated submission\n\n\n\n\nsource\n\n\ngradescope_grade.post_to_canvas\n\n gradescope_grade.post_to_canvas (target_assignment:str,\n                                  passed_assignments:List[str],\n                                  components=[], total_credit=120,\n                                  post=False, force=False, student=[])\n\nPost grade to canvas with late penalty.\n\n\n\n\n\n\n\n\n\n\nType\nDefault\nDetails\n\n\n\n\ntarget_assignment\nstr\n\ntarget assignment name to grab the late time. Must in the column of gradescope csv\n\n\npassed_assignments\nList\n\nlist of passed assignment. Must in the column of gradescope csv\n\n\ncomponents\nlist\n[]\ncomponents of a single assignment. Must in the column of gradescope csv\n\n\ntotal_credit\nint\n120\ntotal number of allowed late hours\n\n\npost\nbool\nFalse\nFor testing purposes. Can halt the post-operation\n\n\nforce\nbool\nFalse\nwhether force to post grade for all students. If False (default), it will skip post for the same score.\n\n\nstudent\nlist\n[]\nlist of student email to post grade. If empty, it will post all students\n\n\n\nAdditionally, one can also generate quick report to get a general sense of how the late situation overall for the students in the class so far.\n\nsource\n\n\ngradescope_grade.calculate_late_reports\n\n gradescope_grade.calculate_late_reports (passed_assignments:List[str],\n                                          total_credit=120)\n\n\n\n\n\n\n\n\n\n\n\nType\nDefault\nDetails\n\n\n\n\npassed_assignments\nList\n\nlist of passed assignment. Must in the column of gradescope csv\n\n\ntotal_credit\nint\n120\ntotal number of allowed late hours\n\n\nReturns\nList\n\n{email: (str: late_assignments, int: late_hours, bool: penalty_applied )}, {email: int total_late_hours}",
    "crumbs": [
      "api",
      "gradescope"
    ]
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Getting Started",
    "section": "",
    "text": "You can install via Pypi:\npip install LatePenalty\nOr alternatively, you can directly install from source\npip install git+https://github.com/scott-yj-yang/LatePenalty.git",
    "crumbs": [
      "Getting Started"
    ]
  },
  {
    "objectID": "index.html#install",
    "href": "index.html#install",
    "title": "Getting Started",
    "section": "",
    "text": "You can install via Pypi:\npip install LatePenalty\nOr alternatively, you can directly install from source\npip install git+https://github.com/scott-yj-yang/LatePenalty.git",
    "crumbs": [
      "Getting Started"
    ]
  },
  {
    "objectID": "index.html#how-to-use",
    "href": "index.html#how-to-use",
    "title": "Getting Started",
    "section": "How to use",
    "text": "How to use\nView our tutorial:\n\nGradescope\n\n\nnbgrader",
    "crumbs": [
      "Getting Started"
    ]
  },
  {
    "objectID": "index.html#why-do-latepenalty-exist",
    "href": "index.html#why-do-latepenalty-exist",
    "title": "Getting Started",
    "section": "Why do LatePenalty Exist?",
    "text": "Why do LatePenalty Exist?\nThis module supports both gradescope and nbgrader. Gradescope is an interface where students can hand in their homework, programming assignments, and even exams. Gradescope does accept late submission after the official deadline, but it does not support well with the late penalty of late submission, according to the course policy. In other words, gradescope accepts late submission, but does nothing to disincentive the late submissions. LatePenalty applies late penalty for the late submissions when we publish grades from gradescope to canvas, with custom messages for students about the allowance of the penalty.",
    "crumbs": [
      "Getting Started"
    ]
  },
  {
    "objectID": "index.html#why-not-use-post-grades-to-canvas-on-gradescope",
    "href": "index.html#why-not-use-post-grades-to-canvas-on-gradescope",
    "title": "Getting Started",
    "section": "Why not use Post Grades to Canvas on Gradescope?",
    "text": "Why not use Post Grades to Canvas on Gradescope?\n\nNo Late Penalty\n\n\nGradescope accepts late submissions from students, but the platform does not penalize late submissions. Post Grades to Canvas will post the raw score, shown on gradescope, to a specific assignment on canvas.\n\n\nNo Support for Multiple Components of a Single Assignment\n\n\nGradescopeâ€™s Post Grades to Canvas is a one-to-one mapping from gradescopeâ€™s assignment to canvasâ€™ assignment. In certain cases, where an assignment has multiple components (auto-graded notebook and handwritten math work), gradescope cannot combine the score to a single assignment. For example, letâ€™s say we have an assignment called Assignment 1, which has two components - Assignment 1 - Autograder and Assignment 1 - Manual Grading on gradescope. This package will combine two assignments into one and sync the canvas grade",
    "crumbs": [
      "Getting Started"
    ]
  },
  {
    "objectID": "index.html#late-policy",
    "href": "index.html#late-policy",
    "title": "Getting Started",
    "section": "Late Policy",
    "text": "Late Policy\nSome courses allow students to submit their work within a certain mercy period of time, also called slip days or slip hours. Once\nIn this module, we the package canvasapi to",
    "crumbs": [
      "Getting Started"
    ]
  },
  {
    "objectID": "index.html#how-to-set-credentials",
    "href": "index.html#how-to-set-credentials",
    "title": "Getting Started",
    "section": "How to set credentials",
    "text": "How to set credentials\nThis package uses canvas API and its wrapper package canvasapi to post grades and comments to your target courseâ€™s assignment. To do that, youâ€™ll have to provide the canvas credentials.\nIn order to interact with this software, youâ€™ll have to create a credentials.json file that is in the following format:\n\n\n{'GitHub Token': 'token', 'Canvas Token': 'token'}\n\n\nWhenever you create an object, you will need to authenticate via this credentials.json file through providing the file path to the object initializer. It will test whether the credential you provided is authenticate or not.",
    "crumbs": [
      "Getting Started"
    ]
  },
  {
    "objectID": "index.html#how-to-obtain-credentials",
    "href": "index.html#how-to-obtain-credentials",
    "title": "Getting Started",
    "section": "How to obtain credentials",
    "text": "How to obtain credentials\n\nLogin to Canvas\nOn the left menu bar, click Account -&gt; Profile\nAt the profile page, click Settings\nScroll down, at Approved Integrations, click + New Access Token\nName it, set expire date, and copy to the credentials.json",
    "crumbs": [
      "Getting Started"
    ]
  },
  {
    "objectID": "api/nbgrader_process_grade.html",
    "href": "api/nbgrader_process_grade.html",
    "title": "nbgrader",
    "section": "",
    "text": "source",
    "crumbs": [
      "api",
      "nbgrader"
    ]
  },
  {
    "objectID": "api/nbgrader_process_grade.html#cogs108-a1-git-related-apis",
    "href": "api/nbgrader_process_grade.html#cogs108-a1-git-related-apis",
    "title": "nbgrader",
    "section": "COGS108 A1 Git Related APIs",
    "text": "COGS108 A1 Git Related APIs\n\nsource\n\nnbgrader_grade.grade_A1_git\n\n nbgrader_grade.grade_A1_git (student_id:str, quarter:str, message:str,\n                              score:float)\n\nGrading the git part of A1 for COGS108\n\n\n\n\n\n\n\n\n\nType\nDetails\n\n\n\n\nstudent_id\nstr\nthe student id of the target student\n\n\nquarter\nstr\nthe quarter of the course, for example, Fa23, Wi24, corresponding to the assignment name.\n\n\nmessage\nstr\nthe message to be posted to canvas, appending to the final message\n\n\nscore\nfloat\nthe score of the student\n\n\n\n\nsource\n\n\nnbgrader_grade.pull_request_details\n\n nbgrader_grade.pull_request_details ()\n\nFetches the pull requests from the GitHub API and saves them to a json file, used in A1 grading\n\nsource\n\n\nnbgrader_grade.grade_prs\n\n nbgrader_grade.grade_prs (student_details:dict, pr_details:dict)\n\nChecks if the PRs exist and grades student based on that\n\n\n\n\n\n\n\n\n\nType\nDetails\n\n\n\n\nstudent_details\ndict\nstudent details, including pid, github username, and score\n\n\npr_details\ndict\npull request details, including github username and PR details\n\n\n\n\nsource\n\n\nnbgrader_grade.check_git_user\n\n nbgrader_grade.check_git_user (user_name:str)\n\nCheck that github user exists.\n\n\n\n\nType\nDetails\n\n\n\n\nuser_name\nstr\nthe github username\n\n\n\n\nsource\n\n\nnbgrader_grade.check_git_repo\n\n nbgrader_grade.check_git_repo (user_name:str, repo_name:str)\n\nCheck that github repository exists (and is public).\n\n\n\n\nType\nDetails\n\n\n\n\nuser_name\nstr\nthe github username\n\n\nrepo_name\nstr\nrepository name\n\n\n\n\nsource\n\n\nnbgrader_grade.check_git_file\n\n nbgrader_grade.check_git_file (user_name:str, repo_name:str, f_name:str)\n\nCheck that a particular file in a github repository exists.\n\n\n\n\nType\nDetails\n\n\n\n\nuser_name\nstr\nthe github username\n\n\nrepo_name\nstr\nrepository name\n\n\nf_name\nstr\nfile name to check the existence in the repo",
    "crumbs": [
      "api",
      "nbgrader"
    ]
  },
  {
    "objectID": "tutorial/nbgrader late penalty tutorial.html",
    "href": "tutorial/nbgrader late penalty tutorial.html",
    "title": "nbgrader late penalty tutorial",
    "section": "",
    "text": "from LatePenalty.nbgrader import nbgrader_grade\n\n\nsource\n\n\n\n nbgrader_grade (credentials_fp='', late_exception_fp='',\n                 API_URL='https://canvas.ucsd.edu', course_id='',\n                 assignment_id=-1, grades_fp='', verbosity=0)\n\nInitialize Canvas Group within a Group Set and its appropriate memberships\n\n\n\n\nType\nDefault\nDetails\n\n\n\n\ncredentials_fp\nstr\n\ncredential file path. Template of the credentials.json\n\n\nlate_exception_fp\nstr\n\nlate exception yaml file path. Template of the late_exception.yaml\n\n\nAPI_URL\nstr\nhttps://canvas.ucsd.edu\nthe domain name of canvas\n\n\ncourse_id\nstr\n\nCourse ID, can be found in the course url\n\n\nassignment_id\nint\n-1\nassignment id, can be found in the canvas assignment url\n\n\ngrades_fp\nstr\n\nnbgrader csv grades exports file path\n\n\nverbosity\nint\n0\nControls the verbosity: 0 = Silent, 1 = print all messages\n\n\n\n\ngrade = nbgrader_grade(\"../../../credentials.json\",\n                       late_exception_fp=\"../data/late_exception_nbgrader.yaml\",\n                       course_id=45023,\n                       assignment_id=638121,\n                       grades_fp=\"../data/grades_example.csv\",\n                       verbosity=1,\n                      )\n\nAuthorization Successful!\nCourse Set:  COGS 108 - Data Science in Practice - Fleischer [SP23] \nGetting List of Users... This might take a while...\nUsers Fetch Complete! The course has 446 users.\nAssignment D1 Link!\n\n\n\n# take a look at nbgrader csv file\ngrade.grades.head()\n\n\n\n\n\n\n\n\nassignment\nduedate\ntimestamp\nstudent_id\nlast_name\nfirst_name\nemail\nraw_score\nlate_submission_penalty\nscore\nmax_score\n\n\n\n\n0\nD1_COGS108_Sp23\n2023-04-15 07:59:00\n2023-04-11 00:32:28.990983\nstudent_0\nNaN\nNaN\nNaN\n2.0\n0.0\n2.0\n2.0\n\n\n1\nD1_COGS108_Sp23\n2023-04-15 07:59:00\n2023-04-17 03:59:02.156619\nstudent_1\nNaN\nNaN\nNaN\n2.0\n0.0\n2.0\n2.0\n\n\n2\nD1_COGS108_Sp23\n2023-04-15 07:59:00\n2023-04-13 02:03:02.382628\nstudent_2\nNaN\nNaN\nNaN\n2.0\n0.0\n2.0\n2.0\n\n\n3\nD1_COGS108_Sp23\n2023-04-15 07:59:00\n2023-04-14 01:23:48.922147\nstudent_3\nNaN\nNaN\nNaN\n2.0\n0.0\n2.0\n2.0\n\n\n4\nD1_COGS108_Sp23\n2023-04-15 07:59:00\n2023-04-12 00:45:49.963719\nstudent_4\nNaN\nNaN\nNaN\n2.0\n0.0\n2.0\n2.0\n\n\n\n\n\n\n\n\n\n\n\nwith open(\"../data/late_exception.yaml\", \"r\") as f:\n    print(f.read())\n\nstudent_1:\n    allowed_late_days: 7\n    reasons: sickness\n\nstudent_3:\n    allowed_late_days: 10\n    reasons: family issue\n\n\n\ngrade.late_exception\n\n{'student_1': {'allowed_late_days': 7, 'reasons': 'sickness'},\n 'student_3': {'allowed_late_days': 10, 'reasons': 'family issue'}}\n\n\n\n\n\nAs we can see, the reamining slip day for student 1 and student 3 is 7 and 10 respectively.\n\nsource\n\n\n\n nbgrader_grade.post_to_canvas (target_assignment:str,\n                                passed_assignments:List[str],\n                                student=None, A1_git=False, quarter='',\n                                default_credit:int=7,\n                                late_submission_deadline:int=5, post=True,\n                                force=False)\n\nPost grade to canvas with late penalty.\n\n\n\n\n\n\n\n\n\n\nType\nDefault\nDetails\n\n\n\n\ntarget_assignment\nstr\n\ntarget assignment name to grab the late time. Must in the column of nbgrader assignment csv\n\n\npassed_assignments\nList\n\nlist of passed assignment. Must in the column of nbgrader assignment csv\n\n\nstudent\nNoneType\nNone\nif specify, only grade that student.\n\n\nA1_git\nbool\nFalse\nSet True if grading A1 for COGS108\n\n\nquarter\nstr\n\nSet the quarter, for example, Fa23, Wi24, etc.\n\n\ndefault_credit\nint\n7\ndefault amount of late days calculated, used in FA24 COGS108\n\n\nlate_submission_deadline\nint\n5\nthe maximum amount of late days that we allow. Implements: We donâ€™t accept late submission after 5 days.\n\n\npost\nbool\nTrue\nfor testing purposes. Can halt the post operation\n\n\nforce\nbool\nFalse\nwhether force post grade. If False, will not post the same grade again, if True, will post the grade again.\n\n\n\nPost grade of assignment D1_COGS108_Sp23\n\ngrade.post_to_canvas(\"D1_COGS108_Sp23\", [], False)\n\nPost Disabled\nThe message for student_0 is: \nD1_COGS108_Sp23: \nSubmitted intime\nRemaining Slip Credit: 5 Days\n\nPost Disabled\nThe message for student_1 is: \nD1_COGS108_Sp23: \nLate Submission: 2 Days Late\nSlip Credit Used. No late penalty applied\nRemaining Slip Credit: 5 Days\n\nPost Disabled\nThe message for student_2 is: \nD1_COGS108_Sp23: \nSubmitted intime\nRemaining Slip Credit: 5 Days\n\nPost Disabled\nThe message for student_3 is: \nD1_COGS108_Sp23: \nSubmitted intime\nRemaining Slip Credit: 10 Days\n\nPost Disabled\nThe message for student_4 is: \nD1_COGS108_Sp23: \nSubmitted intime\nRemaining Slip Credit: 5 Days\n\n\n\nPost grade of assignment A1_COGS108_Sp23. Before you post it, you will have to link the canvas assignment to A1 with the following command.\n\nsource\n\n\n\n\n nbgrader_grade.link_assignment (assignment_id:int)\n\nLink the target assignment on canvas\n\n\n\n\n\n\n\n\n\nType\nDetails\n\n\n\n\nassignment_id\nint\nassignment id, found at the url of assignmnet tab\n\n\nReturns\nAssignment\ntarget assignment\n\n\n\n\n_ = grade.link_assignment(638116)\n\nAssignment A1 Link!\n\n\n\ngrade.post_to_canvas(\"A1_COGS108_Sp23\", [\"D1_COGS108_Sp23\"], False)\n\nPost Disabled\nThe message for student_0 is: \nA1_COGS108_Sp23: \nSubmitted intime\nRemaining Slip Credit: 5 Days\n\nPost Disabled\nThe message for student_1 is: \nA1_COGS108_Sp23: \nLate Submission: 7 Days Late\nInsufficient Slip Credit. 25% late penalty applied\nRemaining Slip Credit: 5 Days\n\nPost Disabled\nThe message for student_2 is: \nA1_COGS108_Sp23: \nSubmitted intime\nRemaining Slip Credit: 5 Days\n\nPost Disabled\nThe message for student_3 is: \nA1_COGS108_Sp23: \nSubmitted intime\nRemaining Slip Credit: 10 Days\n\nPost Disabled\nThe message for student_4 is: \nA1_COGS108_Sp23: \nSubmitted intime\nRemaining Slip Credit: 5 Days",
    "crumbs": [
      "tutorial",
      "nbgrader late penalty tutorial"
    ]
  },
  {
    "objectID": "tutorial/nbgrader late penalty tutorial.html#late-submission-exception",
    "href": "tutorial/nbgrader late penalty tutorial.html#late-submission-exception",
    "title": "nbgrader late penalty tutorial",
    "section": "",
    "text": "with open(\"../data/late_exception.yaml\", \"r\") as f:\n    print(f.read())\n\nstudent_1:\n    allowed_late_days: 7\n    reasons: sickness\n\nstudent_3:\n    allowed_late_days: 10\n    reasons: family issue\n\n\n\ngrade.late_exception\n\n{'student_1': {'allowed_late_days': 7, 'reasons': 'sickness'},\n 'student_3': {'allowed_late_days': 10, 'reasons': 'family issue'}}",
    "crumbs": [
      "tutorial",
      "nbgrader late penalty tutorial"
    ]
  },
  {
    "objectID": "tutorial/nbgrader late penalty tutorial.html#post-grades",
    "href": "tutorial/nbgrader late penalty tutorial.html#post-grades",
    "title": "nbgrader late penalty tutorial",
    "section": "",
    "text": "As we can see, the reamining slip day for student 1 and student 3 is 7 and 10 respectively.\n\nsource\n\n\n\n nbgrader_grade.post_to_canvas (target_assignment:str,\n                                passed_assignments:List[str],\n                                student=None, A1_git=False, quarter='',\n                                default_credit:int=7,\n                                late_submission_deadline:int=5, post=True,\n                                force=False)\n\nPost grade to canvas with late penalty.\n\n\n\n\n\n\n\n\n\n\nType\nDefault\nDetails\n\n\n\n\ntarget_assignment\nstr\n\ntarget assignment name to grab the late time. Must in the column of nbgrader assignment csv\n\n\npassed_assignments\nList\n\nlist of passed assignment. Must in the column of nbgrader assignment csv\n\n\nstudent\nNoneType\nNone\nif specify, only grade that student.\n\n\nA1_git\nbool\nFalse\nSet True if grading A1 for COGS108\n\n\nquarter\nstr\n\nSet the quarter, for example, Fa23, Wi24, etc.\n\n\ndefault_credit\nint\n7\ndefault amount of late days calculated, used in FA24 COGS108\n\n\nlate_submission_deadline\nint\n5\nthe maximum amount of late days that we allow. Implements: We donâ€™t accept late submission after 5 days.\n\n\npost\nbool\nTrue\nfor testing purposes. Can halt the post operation\n\n\nforce\nbool\nFalse\nwhether force post grade. If False, will not post the same grade again, if True, will post the grade again.\n\n\n\nPost grade of assignment D1_COGS108_Sp23\n\ngrade.post_to_canvas(\"D1_COGS108_Sp23\", [], False)\n\nPost Disabled\nThe message for student_0 is: \nD1_COGS108_Sp23: \nSubmitted intime\nRemaining Slip Credit: 5 Days\n\nPost Disabled\nThe message for student_1 is: \nD1_COGS108_Sp23: \nLate Submission: 2 Days Late\nSlip Credit Used. No late penalty applied\nRemaining Slip Credit: 5 Days\n\nPost Disabled\nThe message for student_2 is: \nD1_COGS108_Sp23: \nSubmitted intime\nRemaining Slip Credit: 5 Days\n\nPost Disabled\nThe message for student_3 is: \nD1_COGS108_Sp23: \nSubmitted intime\nRemaining Slip Credit: 10 Days\n\nPost Disabled\nThe message for student_4 is: \nD1_COGS108_Sp23: \nSubmitted intime\nRemaining Slip Credit: 5 Days\n\n\n\nPost grade of assignment A1_COGS108_Sp23. Before you post it, you will have to link the canvas assignment to A1 with the following command.\n\nsource\n\n\n\n\n nbgrader_grade.link_assignment (assignment_id:int)\n\nLink the target assignment on canvas\n\n\n\n\n\n\n\n\n\nType\nDetails\n\n\n\n\nassignment_id\nint\nassignment id, found at the url of assignmnet tab\n\n\nReturns\nAssignment\ntarget assignment\n\n\n\n\n_ = grade.link_assignment(638116)\n\nAssignment A1 Link!\n\n\n\ngrade.post_to_canvas(\"A1_COGS108_Sp23\", [\"D1_COGS108_Sp23\"], False)\n\nPost Disabled\nThe message for student_0 is: \nA1_COGS108_Sp23: \nSubmitted intime\nRemaining Slip Credit: 5 Days\n\nPost Disabled\nThe message for student_1 is: \nA1_COGS108_Sp23: \nLate Submission: 7 Days Late\nInsufficient Slip Credit. 25% late penalty applied\nRemaining Slip Credit: 5 Days\n\nPost Disabled\nThe message for student_2 is: \nA1_COGS108_Sp23: \nSubmitted intime\nRemaining Slip Credit: 5 Days\n\nPost Disabled\nThe message for student_3 is: \nA1_COGS108_Sp23: \nSubmitted intime\nRemaining Slip Credit: 10 Days\n\nPost Disabled\nThe message for student_4 is: \nA1_COGS108_Sp23: \nSubmitted intime\nRemaining Slip Credit: 5 Days",
    "crumbs": [
      "tutorial",
      "nbgrader late penalty tutorial"
    ]
  }
]